### Параметры приложения
# Хост, на который биндится бекенд
APP_HOST=127.0.0.1
# Используйте 0.0.0.0, чтобы сделать его доступным извне:
# APP_HOST=0.0.0.0
# Порт, на который биндится бекенд
APP_PORT=5000


### Параметры доступа к PlantUML серверу для генерации диаграммы сущностей
# Хост PlantUML сервера
PLANTUML_HOST=http://127.0.0.1
# Порт PlantUML сервера
PLANTUML_PORT=8089
# Путь к файлу диаграммы от корня проекта
PLANTUML_DIAGRAM=docs/diagram
# Тип диаграммы (png|svg|txt|puml)
# svg пока генерируется с ошибками
PLANTUML_DIAGRAM_FORMAT=png


### Параметры запуска приложения через PM2
# Имя проекта (префикс для имен процессов)
PM2_PROJECT_NAME=nestjs-template
# Количество инстансов api
PM2_API_CLUSTER_SIZE=1
# Количество инстансов scheduler
PM2_SCHEDULER_CLUSTER_SIZE=1
# Количество инстансов worker
PM2_WORKER_CLUSTER_SIZE=1
# Эффективный uid процесса
#PM2_UID=
# Эффективный gid процесса
#PM2_GID=


### Параметры безопасности
# Секретный ключ для подписывания JWT access токена
JWT_SECRET_KEY=
# Время жизни JWT access токена в секундах
JWT_EXPIRATION=3600
# Время жизни refresh токена в секундах
REFRESH_TOKEN_EXPIRATION=86400
# Уровень сложности bcrypt (https://security.stackexchange.com/questions/17207/recommended-of-rounds-for-bcrypt)
BCRYPT_HASH_ROUNDS=12
# Дополнительное время в секундах, в течение которого можно повторно использовать refresh токен
REFRESH_TOKEN_REUSE_TIMEOUT=60
# Максимальный размер тела JSON запроса в байтах
#JSON_BODY_LIMIT=


### Одноразовые токены
# Время жизни одноразового токена в секундах
ONE_TIME_TOKEN_EXPIRATION=60


### Параметры OAuth клиента
# Время жизни токена, хранящего сессию между началом и концом oauth (секунды)
OAUTH_TOKEN_EXPIRATION=600
# Адрес фронтенда
SOCIAL_FRONTEND_ORIGIN=http://localhost:3000
# Включает возможность возврата данных пользователя на другой домен
# На продуктивном стенде данный режим необходимо отключить
ENABLE_OAUTH_ORIGIN_OVERRIDE=true

### Параметры авторизации через Google
# > Ниже представлены параметры для приложения "NestJS Template", находящегося в домене proscom.ru
# > https://console.cloud.google.com/apis/credentials?hl=ru&orgonly=true&project=nestjs-template&supportedpurview=organizationId
# Активация входа через google
OAUTH_GOOGLE_ENABLE=false
# Идентификатор google приложения
GOOGLE_CLIENT_ID=150595075428-26skothauie5dahad3t6atultokkf7n9.apps.googleusercontent.com
# Секретный ключ google приложения
GOOGLE_SECRET=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
# Базовая ссылка для колбеков от google
GOOGLE_CALLBACK_BASE_URL=http://localhost:5000/auth/google/redirect


### Параметры доступа к redis
# Хост по которому доступен redis
REDIS_HOST=127.0.0.1
# Порт по которому доступен redis
REDIS_PORT=6379
# Пароль доступа к redis или пустая строка, если подключение без пароля
REDIS_PASSWORD=12345678


### Параметры TypeORM
# Хост базы данных
TYPEORM_HOST=127.0.0.1
# Порт базы данных
TYPEORM_PORT=5432
# Имя пользователя БД
TYPEORM_USERNAME=template
# Пароль пользователя БД
TYPEORM_PASSWORD=12345678
# База данных к которой выполняется подключение
TYPEORM_DATABASE=template
# Директория, в которой typeorm CLI ищет файлы моделей
# Может принимать значения src и dist
# Задаётся автоматически в npm скриптах в package.json
TYPEORM_BASE_DIRECTORY=


### Параметры отладки
# Вывод всех выполняемых SQL запросов в консоль
DEBUG_SQL=true
# Активация GraphQL Playground
GRAPHQL_ENABLE_PLAYGROUND=true
# Включение режима отладки GraphQL
# В этом режиме клиенту возвращается дополнительная информация о возникающих исключениях
# На продуктивном стенде данный режим необходимо отключить
GRAPHQL_ENABLE_DEBUG=true
